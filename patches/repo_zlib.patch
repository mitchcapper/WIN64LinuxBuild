diff --git a/CMakeLists.txt b/CMakeLists.txt
index b3a58b3..705bebc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ set(INSTALL_INC_DIR "${CMAKE_INSTALL_PREFIX}/include" CACHE PATH "Installation d
 set(INSTALL_MAN_DIR "${CMAKE_INSTALL_PREFIX}/share/man" CACHE PATH "Installation directory for manual pages")
 set(INSTALL_PKGCONFIG_DIR "${CMAKE_INSTALL_PREFIX}/share/pkgconfig" CACHE PATH "Installation directory for pkgconfig (.pc) files")
 
+option(BUILD_SHARED_LIBS "Build using shared libraries" ON)
+
 include(CheckTypeSize)
 include(CheckFunctionExists)
 include(CheckIncludeFile)
@@ -21,6 +23,16 @@ check_include_file(sys/types.h HAVE_SYS_TYPES_H)
 check_include_file(stdint.h    HAVE_STDINT_H)
 check_include_file(stddef.h    HAVE_STDDEF_H)
 
+
+if (BUILD_SHARED_LIBS)
+    set (ALL_BUILD_TARGETS zlib zlibstatic)
+    set (SAMPLE_BUILD_TARGET zlib)
+else()
+    set (ALL_BUILD_TARGETS zlibstatic)
+    set (SAMPLE_BUILD_TARGET zlibstatic)
+endif()
+
+
 #
 # Check to see if we have large file support
 #
@@ -60,6 +72,11 @@ if(MSVC)
     set(CMAKE_DEBUG_POSTFIX "d")
     add_definitions(-D_CRT_SECURE_NO_DEPRECATE)
     add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE)
+if(NOT BUILD_SHARED_LIBS)
+	set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
+	set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
+	set(CMAKE_EXE_LINKER_FLAGS "-static")
+endif()
     include_directories(${CMAKE_CURRENT_SOURCE_DIR})
 endif()
 
@@ -121,10 +138,12 @@ set(ZLIB_SRCS
 )
 
 if(NOT MINGW)
+if(BUILD_SHARED_LIBS)
     set(ZLIB_DLL_SRCS
         win32/zlib1.rc # If present will override custom build rule below.
     )
 endif()
+endif()
 
 # parse the full version number from zlib.h and include in ZLIB_FULL_VERSION
 file(READ ${CMAKE_CURRENT_SOURCE_DIR}/zlib.h _zlib_h_contents)
@@ -144,15 +163,26 @@ if(MINGW)
                             -I ${CMAKE_CURRENT_BINARY_DIR}
                             -o ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj
                             -i ${CMAKE_CURRENT_SOURCE_DIR}/win32/zlib1.rc)
-    set(ZLIB_DLL_SRCS ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj)
+if(BUILD_SHARED_LIBS)
+                            set(ZLIB_DLL_SRCS ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj)
+endif()
 endif(MINGW)
 
+if(BUILD_SHARED_LIBS)
 add_library(zlib SHARED ${ZLIB_SRCS} ${ZLIB_DLL_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})
-add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})
 set_target_properties(zlib PROPERTIES DEFINE_SYMBOL ZLIB_DLL)
-set_target_properties(zlib PROPERTIES SOVERSION 1)
+endif()
+add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})
+
+target_compile_options(zlibstatic PUBLIC /MT)
+target_compile_options(zlibstatic PRIVATE /MT)
+target_link_options(zlibstatic PUBLIC /INCREMENTAL:NO /NODEFAULTLIB:MSVCRT)
+target_link_options(zlibstatic PRIVATE /INCREMENTAL:NO /NODEFAULTLIB:MSVCRT)
+
+set_target_properties(${ALL_BUILD_TARGETS} PROPERTIES SOVERSION 1)
+
 
-if(NOT CYGWIN)
+if(NOT CYGWIN AND BUILD_SHARED_LIBS)
     # This property causes shared libraries on Linux to have the full version
     # encoded into their final filename.  We disable this on Cygwin because
     # it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll
@@ -165,8 +195,8 @@ endif()
 
 if(UNIX)
     # On unix-like platforms the library is almost always called libz
-   set_target_properties(zlib zlibstatic PROPERTIES OUTPUT_NAME z)
-   if(NOT APPLE)
+    set_target_properties(${ALL_BUILD_TARGETS} PROPERTIES OUTPUT_NAME z)
+   if(NOT APPLE AND BUILD_SHARED_LIBS)
      set_target_properties(zlib PROPERTIES LINK_FLAGS "-Wl,--version-script,\"${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\"")
    endif()
 elseif(BUILD_SHARED_LIBS AND WIN32)
@@ -175,7 +205,7 @@ elseif(BUILD_SHARED_LIBS AND WIN32)
 endif()
 
 if(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL )
-    install(TARGETS zlib zlibstatic
+    install(TARGETS ${ALL_BUILD_TARGETS}
         RUNTIME DESTINATION "${INSTALL_BIN_DIR}"
         ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
         LIBRARY DESTINATION "${INSTALL_LIB_DIR}" )
@@ -195,19 +225,19 @@ endif()
 #============================================================================
 
 add_executable(example test/example.c)
-target_link_libraries(example zlib)
+target_link_libraries(example ${SAMPLE_BUILD_TARGET})
 add_test(example example)
 
 add_executable(minigzip test/minigzip.c)
-target_link_libraries(minigzip zlib)
+target_link_libraries(minigzip ${SAMPLE_BUILD_TARGET})
 
 if(HAVE_OFF64_T)
     add_executable(example64 test/example.c)
-    target_link_libraries(example64 zlib)
+    target_link_libraries(example64 ${SAMPLE_BUILD_TARGET})
     set_target_properties(example64 PROPERTIES COMPILE_FLAGS "-D_FILE_OFFSET_BITS=64")
     add_test(example64 example64)
 
     add_executable(minigzip64 test/minigzip.c)
-    target_link_libraries(minigzip64 zlib)
+    target_link_libraries(minigzip64 ${SAMPLE_BUILD_TARGET})
     set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS "-D_FILE_OFFSET_BITS=64")
 endif()
