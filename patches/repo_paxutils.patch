diff --git a/lib/rmt.h b/lib/rmt.h
index 868b0c3..3f9ff8f 100644
--- a/lib/rmt.h
+++ b/lib/rmt.h
@@ -38,6 +38,7 @@ _GL_INLINE_HEADER_BEGIN
    Distributed File System (DFS).  However, when --force-local, a
    filename is never remote.  */
 
+#ifndef _WIN32
 RMT_INLINE bool
 _remdev (char const *__dev_name)
 {
@@ -48,6 +49,21 @@ _remdev (char const *__dev_name)
       return true;
   return false;
 }
+#else
+//for windows we need to make sure the colon is not a drive letter;0  sorry 1 char hosts you are screwed
+RMT_INLINE bool
+_remdev (char const *__dev_name)
+{
+  if (force_local_option || *__dev_name == ':' || (strlen(__dev_name) > 2 && __dev_name[1] == ':') )
+    return false;
+  for (char const *__p = __dev_name; *__p & (*__p != '/'); __p++)
+    if (*__p == ':')
+      return true;
+  return false;
+}
+
+#endif // !_WIN32
+
 
 enum { __REM_BIAS = 1 << 30 };
 
diff --git a/lib/rtapelib.c b/lib/rtapelib.c
index 01a3b18..fb8fd95 100644
--- a/lib/rtapelib.c
+++ b/lib/rtapelib.c
@@ -40,7 +40,7 @@
 # include <sys/mtio.h>
 #endif
 
-#if HAVE_NETDB_H
+#if defined(HAVE_NETDB_H) || defined(HAVE_DECL_GAI_STRERROR)
 # include <netdb.h>
 #endif
 
@@ -364,7 +364,7 @@ encode_oflags (char *buf, int oflags)
 static char const *
 sys_reset_uid_gid (void)
 {
-#if !MSDOS
+#if !defined(MSDOS) && !defined(_WIN32)
   uid_t uid = getuid ();
   gid_t gid = getgid ();
   struct passwd *pw = getpwuid (uid);
@@ -522,7 +522,11 @@ rmt_open (char const *file_name, int oflags, int bias,
 	return -1;
       }
 
+#ifdef _WIN32
+  return -1;
+#else
     status = fork ();
+#endif
     if (status < 0)
       {
 	int e = errno;
diff --git a/lib/system.h b/lib/system.h
index 1a29253..f915a79 100644
--- a/lib/system.h
+++ b/lib/system.h
@@ -32,11 +32,20 @@
 # define mkfifo(file_name, mode) (mknod (file_name, (mode) | S_IFIFO, 0))
 #endif
 
-#define MODE_WXUSR	(S_IWUSR | S_IXUSR)
-#define MODE_R		(S_IRUSR | S_IRGRP | S_IROTH)
-#define MODE_RW		(S_IWUSR | S_IWGRP | S_IWOTH | MODE_R)
-#define MODE_RWX	(S_IXUSR | S_IXGRP | S_IXOTH | MODE_RW)
-#define MODE_ALL	(S_ISUID | S_ISGID | S_ISVTX | MODE_RWX)
+#ifndef _WIN32
+#define MODE_WXUSR     (S_IWUSR | S_IXUSR)
+#define MODE_R         (S_IRUSR | S_IRGRP | S_IROTH)
+#define MODE_RW(S_IWUSR | S_IWGRP | S_IWOTH | MODE_R) //owner write group write, other write
+#define MODE_RWX       (S_IXUSR | S_IXGRP | S_IXOTH | MODE_RW)
+#define MODE_ALL       (S_ISUID | S_ISGID | S_ISVTX | MODE_RWX)
+#else
+#include <sys/stat.h>
+#define MODE_WXUSR		_S_IWRITE
+#define MODE_R			_S_IREAD
+#define MODE_RW			_S_IWRITE
+#define MODE_RWX		MODE_RW
+#define MODE_ALL		MODE_RWX
+#endif
 
 /* Include <unistd.h> before any preprocessor test of _POSIX_VERSION.  */
 #include <unistd.h>
@@ -156,10 +165,10 @@
 # include <grp.h>
 #endif
 
-#if MSDOS
+#if defined(MSDOS) || defined(_WIN32)
 # include <process.h>
 # define SET_BINARY_MODE(arc) setmode(arc, O_BINARY)
-# define mkdir(file, mode) (mkdir) (file)
+//# define mkdir(file, mode) (mkdir) (file)
 # define TTY_NAME "con"
 #else
 # define SET_BINARY_MODE(arc)
