name: GNULIB Patch Tests
on:
  push:
    branches-ignore:
      - trash
  schedule:
    - cron: '30 5 * * *'

env:
  CI_REQ_DOTNET_SDK_VER: 6.0.401
  NUKE_TELEMETRY_OPTOUT: 1
  MSYS: "winsymlinks:native wincmdln"
  MSYS2_ARG_CONV_EXCL: "*"
  MSYS2_PATH_TYPE: inherit
  WLB_BASE_FOLDER: "d:/WLB"
  MSYSTEM: UCRT64
  MSYS_PATH: d:/msys64

jobs:
  get_patch_matrix:
    uses: ./.github/workflows/do_build.yml
    with:
      BuildPkg: script
      Script: .github/gnu_patchtest.sh gnulib_dump_patches
      NoDebugBuild: true
  gnulib_source_cache:
    runs-on: windows-latest
    needs: gnulib_test_all_patches # doesn't actually need it for the bare clone but as we also use this step to cache the last successful commit id we require it    
    defaults:
        run:
          shell: pwsh
    steps:
      - name: clone src
        run: git clone --bare git://git.sv.gnu.org/gnulib.git ${{env.WLB_BASE_FOLDER}}/gnulib.git
      - name: Export Success Commit
        shell: pwsh
        run: echo ${{ needs.gnulib_test_all_patches.outputs.ScriptRes }} > ${{env.WLB_BASE_FOLDER}}/gnulib.git/gnulib_success_commit.txt
      - name: Cache gnulib bare repo
        uses: actions/cache/save@v4
        with:
          path: ${{env.WLB_BASE_FOLDER}}/gnulib.git
          key: gnulib-bare
          enableCrossOsArchive: true

  gnulib_test_all_patches:
    name: Test All Patches Together
    uses: ./.github/workflows/do_build.yml
    with:
      BuildPkg: script
      NoDebugBuild: true
      Script: .github/gnu_patchtest.sh all_patch
  
  gnulib_test_patch:
    name: Test Single
    needs: get_patch_matrix
    strategy:
      fail-fast: false
      matrix:
        PatchName: ${{ fromjson(needs.get_patch_matrix.outputs.ScriptRes) }}
        Mode: [branch, patch]
    uses: ./.github/workflows/do_build.yml
    with:
      NoDebugBuild: true
      BuildPkg: script
      Script: .github/gnu_patchtest.sh ${{ matrix.Mode }} '${{ matrix.PatchName }}'
